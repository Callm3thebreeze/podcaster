---
import { podcastsData } from "@/utils/fetchData";

const { episodesData } = Astro.props;

const podcastName = episodesData.results[0].collectionName;
const podcastsList = await podcastsData;
const podcast = await podcastsList.find(
  (podcast) => podcast.name === podcastName
);
const podcastId = podcast.id;

const episodesArray = episodesData.results.slice(1);
const episodesNumber = episodesData.resultCount;

const episodes = episodesArray.map((episode) => ({
  id: episode.trackId,
  title: episode.trackName,
  collectionName: episode.collectionName,
  releaseDate: episode.releaseDate,
  duration: episode.trackTimeMillis,
  description: episode.description,
  media: episode.episodeUrl,
}));
---

<article class="pd-episodes-container">
  <h3>Episodes: {episodesNumber}</h3>
  <table class="pd-episodes-list">
    <thead>
      <tr>
        <th>Título del Podcast</th>
        <th>Fecha de Salida</th>
        <th>Duración</th>
      </tr>
    </thead>
    <tbody>
      {
        episodes.map((episode) => (
          <tr>
            <td>
              <a href={`/podcast/${podcastId}/episode/${episode.id}`}>
                {episode.title}
              </a>
            </td>
            <td>{episode.releaseDate}</td>
            <td>{episode.duration}</td>
          </tr>
        ))
      }
    </tbody>
  </table>
</article>

<style>
  .pd-episodes-container {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .pd-episodes-container h3 {
    margin: 0;
    padding: 1rem;
    font-weight: bold;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
  }

  .pd-episodes-list {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
    padding: 1rem;
  }
  .pd-episodes-list th {
    font-weight: bold;
    text-align: left;
  }

  .pd-episodes-list tr {
    margin: 0.5rem;
  }
</style>
