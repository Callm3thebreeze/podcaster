---
import Layout from "@/layouts/Layout.astro";
import podcastCard from "@/components/podcastCard.astro";
import { getPodcasts } from "../utils/fetchData";
import mockData from "@/lib/mockData.json";
import PodcastCard from "@/components/podcastCard.astro";

const url =
  "https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json";

// const data = await getPodcasts(url);
const podcastsData = mockData.feed.entry.map((podcast) => ({
  id: podcast.id.attributes["im:id"],
  name: podcast["im:name"].label,
  image: podcast["im:image"][2].label,
  artist: podcast["im:artist"].label,
  category: podcast.category.attributes.label,
  summary: podcast.summary.label,
  link: podcast.link.attributes.href,
}));
---

<Layout title="Podcaster" />

<main>
  <input
    type="search"
    id="podcastSearch"
    name="q"
    placeholder="Search for a podcast or artist..."
  />
  <section class="podcasts">
    {
      podcastsData.map((podcast) => (
        <PodcastCard
          name={podcast.name}
          image={podcast.image}
          artist={podcast.artist}
        />
      ))
    }
  </section>
</main>
<style>
  main {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  input[type="search"] {
    margin: 1rem 0 1rem auto;
    padding: 0.5rem;
    font-size: 1rem;
    width: 100%;
    max-width: 350px;
    border-radius: 3px;
  }
  section {
    display: grid;
    width: 100%;
    gap: 2rem;
    list-style: none;
    grid-template-columns: repeat(4, minmax(min(100%, 13rem), 1fr));
    justify-content: center;
    padding: 0 5rem;
  }
</style>
